[/Script/OnlineSubsystemUtils.IpNetDriver]
MaxInternetClientRate=100000
MaxClientRate=100000
NetServerMaxTickRate=120
LanServerMaxTickRate=120
ConnectionTimeout=10.0
InitialConnectTimeout=20.0

[DDoSDetection]
bDDoSDetection=True
bDDoSAnalytics=True
DDoSLogSpamLimit=64
HitchTimeQuotaMS=500
HitchFrameTolerance=3

[/Script/Engine.Engine]
bAllowMatureLanguage=True
bSmoothFrameRate=True
bUseFixedFrameRate=False
SmoothedFrameRateRange=(LowerBound=(Type=Inclusive,Value=30.000000),UpperBound=(Type=Exclusive,Value=120.000000))
;NetClientTicksPerSecond=120
;FixedFrameRate=999.000000


;https://docs.unrealengine.com/en-US/API/Runtime/AIModule/Navigation/UCrowdManager/index.html
;;make AI into squad/group (Need testing)
[/Script/AIModule.CrowdManager]
bResolveCollisions=True
;;Radius to gather agents
MaxAgentRadius=2000.0
;;Max number of agents in a group
MaxAgents=4
MaxAvoidedAgents=2

[OnlineSubsystemSteamNWI]
bVACEnabled=1

[/Script/Insurgency.INSWorldSettings]
bShowBreath=True
bAlwaysNight=False
bRandomLightingScenario=True

[SystemSettings]
;If true, and if running on a Unix/Linux platform, multiple packets will be retrieved from the socket with one syscall, improving performance and also allowing retrieval of timestamp information.
net.UseRecvMulti=1
;When RecvMulti is enabled, this is the number of packets it is allocated to handle per call - bigger is better, but keep an eye on memory cost.
net.RecvMultiCapacity=8192
;Support for the IP net driver to optionally use a separate thread to receive packets.This is a useful optimization for platforms where the socket system calls can take a while.
;These, in theory, can reduce the CPU consumption of the servers
net.IpNetDriverUseReceiveThread=1
;IP connections to optionally make the socket send call on a background thread. It helps platforms where the socket send system calls can take a while
;These, in theory, can reduce the CPU consumption of the servers
net.IpConnectionUseSendTasks=1
;If net.IpNetDriverUseReceiveThread is true, the maximum number of packets that can be waiting in the queue. Additional packets received will be dropped.
net.IpNetDriverReceiveThreadQueueMaxPackets=8192
;Maximum allowed size for strings sent/received by the netcode (in bytes).
net.MaxNetStringSize=67108864
;Maximum number of RPCs allowed per net update
net.MaxRPCPerNetUpdate=8
;If true, ticks are dispatched in a task thread.
tick.AllowAsyncTickDispatch=1
;If true, ticks are cleaned up in a task thread.
tick.AllowAsyncTickCleanup=1
;End of frame updates now optionally can do the gamethread updates while we are doing parallel updates. 
;The relevant cvars are AllowAsyncRenderThreadUpdates and AllowAsyncRenderThreadUpdatesDuringGamethreadUpdates.
AllowAsyncRenderThreadUpdates=1
AllowAsyncRenderThreadUpdatesDuringGamethreadUpdates=1